diff -uNr gtk-mac-bundler-0.6.1-orig/bundler/bundler.py gtk-mac-bundler-0.6.1/bundler/bundler.py
--- gtk-mac-bundler-0.6.1-orig/bundler/bundler.py	2011-03-28 23:19:46.000000000 +0400
+++ gtk-mac-bundler-0.6.1/bundler/bundler.py	2012-08-21 04:26:31.000000000 +0400
@@ -340,6 +340,10 @@
                 if not "(compatibility" in line:
                     return False
 
+                if line.startswith("@executable_path/"):
+                    print "Warning, can't resolve @executable_path, skipping:", line.strip().split()[0]
+                    return False
+
                 if line.startswith("/usr/X11"):
                     print "Warning, found X11 library dependency, you most likely don't want that:", line.strip().split()[0]
 
@@ -509,7 +513,6 @@
 
     def copy_translations(self):
         translations = self.project.get_translations()
-        prefix = self.project.get_prefix()
 
 
         def name_filter(filename):
@@ -526,14 +529,21 @@
             if program.name == "" or program.name == None:
                 raise "No program name to tranlate!"
 
+            p = re.compile("^\${prefix(:.*?)?}/")
+            m = p.match(program.source)
+            prefixname = m.group(1)
+            if prefixname == None:
+                prefixname = "default"
+            else:
+                prefixname = prefixname[1:]
+            prefix = self.project.get_prefix(prefixname)
             source = self.project.evaluate_path(program.source)
             if source == None:
                 raise "Failed to parse translation source!"
             for root, trees, files in os.walk(source):
                 for file in filter(name_filter, files):
                     path = os.path.join(root, file)
-                    self.copy_path(Path("${prefix}" + path[len(prefix):], 
-                                        program.dest))
+                    self.copy_path(Path("${prefix:" + prefixname + "}" + path[len(prefix):], None))
 
 
     def run(self):
@@ -552,9 +562,6 @@
         self.create_pkglist()
         self.copy_plist()
 
-        # Note: could move this to xml file...
-        self.copy_path(Path("${prefix}/lib/charset.alias"))
-
         # Launcher script, if necessary.
         launcher_script = self.project.get_launcher_script()
         if launcher_script:
diff -uNr gtk-mac-bundler-0.6.1-orig/bundler/run-install-name-tool-change.sh gtk-mac-bundler-0.6.1/bundler/run-install-name-tool-change.sh
--- gtk-mac-bundler-0.6.1-orig/bundler/run-install-name-tool-change.sh	2010-06-02 03:32:31.000000000 +0400
+++ gtk-mac-bundler-0.6.1/bundler/run-install-name-tool-change.sh	2012-08-18 22:26:27.000000000 +0400
@@ -15,11 +15,13 @@
     for lib in $libs; do
 	if ! echo $lib | grep --silent "@executable_path" ; then
 	    fixed=`echo $lib | sed -e s,\$WRONG_PREFIX,\$RIGHT_PREFIX,`
+	    chmod u+w $LIBRARY
 	    install_name_tool -change $lib $fixed $LIBRARY
 	fi
     done;
 elif [ "x$ACTION" == "xid" ]; then
     lib="`otool -D $LIBRARY 2>/dev/null | grep ^$WRONG_PREFIX`"
+    chmod u+w $LIBRARY
     install_name_tool -id "$RIGHT_PREFIX/$lib" $LIBRARY;
 fi
     
